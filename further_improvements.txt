 - В файле xml_parser.py необходиом изменить абсолютный путь в FILE на относительный.(готово)
 - Написать функцию, которая при обновлении (при нажатии ПКМ -> Update по ячейке CFturbo Design) изменяла бы исходный
   файл .cft-batch и сохраняла его.(готово)
 - Написать промежуточную функцию, которая бы при обновлении брала одно (обновленное) значение ячейки свойств Tip Clearance
   и писала бы это новое значение в файл с названием output.xml. Перед этим понять как изменить текст в xml по тегу(атрибуту)(готово)


/*------- 26.06.18 --------*/

 - Добавить ещё один task ниже основного CFTurbo Design и назвать его СFTurbo Import (готово)
 - Создать еще один callback, который пока что просто перемещает файл .curve из директории act (готово)
 - Понять, что указать во втором таске в теге output (INFFilename), чтобы TurboGrid читал inf файл вышестоящего таска (готово)
 - Нужно, чтобю .inf файл был ассоциирован с ячейкой A3, при этом файлы .curve и .tse должны быть ассоциированы с ячейкой A1 (готово).


/*------- 3.07.18 --------*/

 - Научиться запускать CFT Turbo в батч режиме без питона. Для этого нужно найти командную строку CFTurbo (готово).
 - Понять как питон запускает программы в батч режиме (это сперва сделать вне ACT) (готово).
   - Добавить проверку присутствия .cft файла в директории user files (готово)
   - Ассоциировать файл .cft с ячейкой A2 и добавить его путь в файл .cft-batch (готово)
   - Изменить статус ячейки на "Unfulfield" в случае, если не удается скопировать файл (готово).
   - Переместить код, выделенный красным с 30 по 38 строку, в отдельную функцию, чтобы убрать дублирование (готово).
   - Убрать код с проверкой файла с расширением .cft-batch (строка 166) и взять переменную target_dir из функции copy_cft_file (готово)
   - Переместить дублированный код из функции update в отдельную функцию (готово).
   - Изменить путь в .cft-batch файле при его копировании в директорию проекта. Путь должен быть как у .cft файла в ActiveDirectory (готово)
   - Убрать абсолютное имя файла в 236 строке (готово).


/*------- 5.07.18 --------*/

- Запуск CFTurbo в фоновом режиме(готово).


/*------- 6.07.18 --------*/

 - Из TSE файла необходимо выделить информацию для формирования .inf-файла.
  /*------ комментарии к структуре файлов .inf и .tse -------*/

   - Axis of Rotation:              берется из узла MACHINE DATA атрибута Principal Axis = Z
   - Number of Blade Sets:          берется из узла MACHINE DATA атрибута Bladeset Count = 4
   - Number of Blades Per Set:      можно подсчитывать количество атрибутов Blade Number в узле BLADE SET
   - Blade Loft Direction:          по умолчанию оставляем Spanwise, так как в CFTurbo нет Streamwise направления
   - Geometry Units:                берется из узла HUB Input Length Units
   - Coordinate System Orientation: по умолчанию CFTurbo использует Righthanded
   - Blade 0 LE:                    берется из узла BLADE атрибута Leading Edge Type. Если у данного атрибута значение = Single, то присваивается EllipseEnd
                                    (нужно проверить какие есть конфигурации кромок в TurboGrid и BladeEditor и какие при этом записываются свойства в .inf файл)
                                    разъяснения по конфигурации .inf файла имеются в разделе документации help/tg_user/i998527.html
   - Blade 0 TE:                    берется из узла BLADE атрибута Leading Edge Type. Если у данного атрибута значение = Double Cutoff, то присваивается CutOffEnd

   Нижние строки добавляются, если имеются сплиттерные лопатки
   - Blade 1 LE:
   - Blade 1 TE:

   - Hub Data File: *_hub.curve
   - Shroud Data File: *_shroud.curve
   - Profile Data File: *_profile.curve


/*------- 25.07.18 --------*/

 - В файле main_kp.py функция obtain_curve_files является избыточной так как мы можем получать имена *_hub.curve, *_shroud.curve, *_profile.curve из словарей,
   которые создаются в файле tse_parser.py. Пока что не перепичывать скрипт;
 - Необходиом сделать такую же структуру списка, состоящего из словарей как делает функция make_genaral_list()
 - На данном этапе нужно понять, до какого


 /*---- новый подход к созданию tse-парсера ----*/

  - Создать родительский класс Geometry, в котором необходиом определить метод, открывающий файл и выделяющий кусок в файле между строками start='MACHINE DATA', end='END'.
    Строки между start и end будут являться атрибутами дочерних классов MachineData, Hub, Shroud, MainBlade, SplitterBlade.
  - Понять как динамически создать дочерние классы MachineData, Hub, Shroud, MainBlade, SplitterBlade (пока что через функцию type()).


/*------- 1.08.18 --------*/

 - модифицировать скрипт, так чтобы читались файлы с пробелами.(готово)
 - дописать подстановку
 - нужно удалять из .cft-batch файла фрагмент
 "
 <ExportComponents Desc="Add/remove value with component's index in project; remove this element to export active component only">
				<Value Type="Integer">1</Value>
			</ExportComponents>
 "

